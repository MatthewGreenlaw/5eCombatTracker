{"version":3,"sources":["components/App/index.jsx","components/Dice/index.jsx","components/utils/randomNumberGenerator.js","components/DiceRoller/index.jsx","components/InitTracker/index.jsx","components/HealthTracker/index.jsx","components/AttackRoller/index.jsx","components/Entity/index.jsx","components/NewCharacterForm/index.jsx","index.js"],"names":["playerData","socket","Dice","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hide","bind","assertThisInitialized","state","nth","n","die","mod","res","advantage","disadvantage","critical","hidden","setState","callback","statecritical","_this2","setAdvantage","setDisadvantage","setCritical","react_default","a","createElement","Toast","fade","ToastHeader","toggle","removable","Form","inline","FormGroup","check","Label","sm","Input","type","onChange","checked","onClick","ToastBody","value","className","readOnly","e","setN","target","placeholder","setDie","defaultValue","setMod","React","Component","randomAPI","require","generateIntegers","func","params","apiKey","then","result","random","data","catch","console","log","DiceRoller","addDie","removeDie","roll","rollDice","summedValues","rollD20","rollAdvantage","rollDisadvantage","defaultDie","rolls","i","forEach","rngParams","min","max","replacement","values","sum","reduce","val","length","criticalIcon","slice","push","JSON","parse","stringify","splice","_this3","diceCallback","update","react","Row","Col","Button","block","style","padding","dice","key","Dice_Dice","toString","buildChildren","HealthTracker","current","temp","damage","updateDamage","on","Container","character","ac","Table","AttackRoller","modifier","vals","action","toLowerCase","xs","marginRight","Entity","from","to","Card","CardHeader","HealthTracker_HealthTracker","name","maxHP","option","AttackRoller_AttackRoller","emit","id","NewCharacterForm","init","for","undefined","newPlayer","User","react_router","openSocket","query","Entity_Entity","document","getElementById","click","addNewPlayer","NewCharacterForm_NewCharacterForm","App","react_router_dom","Navbar","Nav","NavItem","path","component","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.dd6e7272.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {\r\n  Container,\r\n  Navbar, Nav, NavItem, NavLink\r\n} from 'reactstrap'\r\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter} from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport DiceRoller from './../DiceRoller'\r\nimport InitTracker from './../InitTracker'\r\nimport HealthTracker from './../HealthTracker'\r\nimport Entity from \"./../Entity\";\r\nimport NewCharacterForm from \"./../NewCharacterForm\"\r\n\r\nvar playerData;\r\nvar players;\r\nvar newPlayer = true;\r\nvar socket;\r\nconsole.log(\"Generate\")\r\n\r\nfunction User () {\r\n  if(playerData === undefined)\r\n    return <Redirect to=\"/addNewPlayer\"/>;\r\n\r\n  //Prevent multiple connections\r\n  if(newPlayer){\r\n    newPlayer = !newPlayer;\r\n    socket = openSocket('http://matthewgreenlaw.com:3001', {query: {type: \"Player\", name: playerData.name}})\r\n    socket.emit('newPlayer', {\r\n      id: socket.id,\r\n      name: playerData.name\r\n    })\r\n  }\r\n  return <Entity\r\n    name={playerData.name}\r\n    ac={playerData.ac}\r\n    maxHP={playerData.maxHP}\r\n    init={playerData.init}\r\n    socket={socket}\r\n  />\r\n}\r\n\r\nfunction callback (data) {\r\n  playerData = data;\r\n  //return <Redirect push to='/player'/>\r\n  document.getElementById('player').click()\r\n}\r\n\r\nfunction addNewPlayer() {\r\n  console.log(\"here\")\r\n\r\n  return <NewCharacterForm callback={callback}/>\r\n}\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Navbar>\r\n      <Nav>\r\n        <NavItem>\r\n          <Link to=\"/\">Home</Link>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Link to=\"/roller/\">Dice Roller</Link>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Link to=\"/player\" id=\"player\">Player Area</Link>\r\n        </NavItem>\r\n      </Nav>\r\n    </Navbar>\r\n    <Route\r\n      path=\"/addNewPlayer\"\r\n      component={addNewPlayer}\r\n    />\r\n    <Route\r\n      path=\"/roller\"\r\n      component={DiceRoller}\r\n    />\r\n    <Route\r\n      path=\"/player\"\r\n      component={User}\r\n    />\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Toast,\r\n  ToastHeader,\r\n  ToastBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport \"./styles.css\";\r\n\r\nexport default class Dice extends React.Component {\r\n  static propTypes = {\r\n    nth: PropTypes.number,\r\n    n: PropTypes.number,\r\n    die: PropTypes.number,\r\n    mod: PropTypes.number,\r\n    res: PropTypes.string,\r\n    advantage: PropTypes.bool,\r\n    disadvantage: PropTypes.bool,\r\n    removable: PropTypes.bool\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.hide = this.hide.bind(this);\r\n\r\n    this.state = {\r\n      nth: this.props.nth,\r\n      n: this.props.n,\r\n      die: this.props.die,\r\n      mod: this.props.mod,\r\n      res: this.props.res,\r\n      advantage: false,\r\n      disadvantage: false,\r\n      critical: false,\r\n      hidden: false\r\n    };\r\n  }\r\n\r\n  async setN(n) {\r\n    await this.setState({ n: n, res: 0 });\r\n\r\n    this.props.callback(\r\n      {\r\n        nth: this.state.nth,\r\n        n: n,\r\n        die: this.state.die,\r\n        mod: this.state.mod,\r\n        res: 0,\r\n        advantage: this.state.advantage,\r\n        disadvantage: this.state.disadvantage,\r\n        critical: this.statecritical,\r\n        hidden: this.state.hidden\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async setDie(die) {\r\n    await this.setState({ die: die, res: 0 });\r\n    this.props.callback(\r\n      {\r\n        nth: this.state.nth,\r\n        n: this.state.n,\r\n        die: die,\r\n        mod: this.state.mod,\r\n        res: 0,\r\n        advantage: this.state.advantage,\r\n        disadvantage: this.state.disadvantage,\r\n        critical: this.statecritical,\r\n        hidden: this.state.hidden\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async setMod(mod) {\r\n    await this.setState({ mod, res: 0 });\r\n    this.props.callback(\r\n      {\r\n        nth: this.state.nth,\r\n        n: this.state.n,\r\n        die: this.state.die,\r\n        mod: mod,\r\n        res: 0,\r\n        advantage: this.state.advantage,\r\n        disadvantage: this.state.disadvantage,\r\n        critical: this.statecritical,\r\n        hidden: this.state.hidden\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async hide() {\r\n    await this.setState({ hidden: true });\r\n    this.props.callback(\r\n      {\r\n        nth: this.state.nth,\r\n        hidden: true\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var setAdvantage = () => {\r\n      this.props.callback(\r\n        {\r\n          nth: this.state.nth,\r\n          n: 1, //Advantage rolls limited to 1 primary dice\r\n          die: this.state.die,\r\n          mod: this.state.mod,\r\n          res: 0,\r\n          advantage: !this.state.advantage,\r\n          disadvantage: this.state.disadvantage,\r\n          critical: this.statecritical,\r\n          hidden: this.state.hidden\r\n        },\r\n        false\r\n      );\r\n      this.setState({ advantage: !this.state.advantage, n: 1, res: 0 });\r\n    };\r\n\r\n    var setDisadvantage = () => {\r\n      this.props.callback(\r\n        {\r\n          nth: this.state.nth,\r\n          n: 1, //Disadvantage rolls limited to 1 primary dice\r\n          die: this.state.die,\r\n          mod: this.state.mod,\r\n          res: 0,\r\n          advantage: this.state.advantage,\r\n          disadvantage: !this.state.disadvantage,\r\n          critical: this.statecritical,\r\n          hidden: this.state.hidden\r\n        },\r\n        false\r\n      );\r\n      this.setState({ disadvantage: !this.state.disadvantage, n: 1, res: 0 });\r\n    };\r\n\r\n    var setCritical = () => {\r\n      this.props.callback(\r\n        {\r\n          nth: this.state.nth,\r\n          n: this.state.n,\r\n          die: this.state.die,\r\n          mod: this.state.mod,\r\n          res: 0,\r\n          advantage: this.state.advantage,\r\n          disadvantage: this.state.disadvantage,\r\n          critical: !this.statecritical,\r\n          hidden: this.state.hidden\r\n        },\r\n        false\r\n      );\r\n      this.setState({ critical: !this.state.critical, res: 0 });\r\n    };\r\n\r\n    var attackDie = () => {\r\n      return (\r\n        <Form inline>\r\n          <FormGroup check>\r\n            <Label check sm={2}>\r\n              <Input\r\n                type=\"checkbox\"\r\n                onChange={setAdvantage}\r\n                checked={this.state.advantage}\r\n              />{\" \"}\r\n              Advantage{\" \"}\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check sm={2}>\r\n              <Input\r\n                type=\"checkbox\"\r\n                onChange={setDisadvantage}\r\n                checked={this.state.disadvantage}\r\n              />{\" \"}\r\n              Disadvantage{\" \"}\r\n            </Label>\r\n          </FormGroup>\r\n        </Form>\r\n      );\r\n    };\r\n\r\n    var criticalDie = () => {\r\n      return (\r\n        <Form inline>\r\n          <FormGroup check>\r\n            <Label check sm={2}>\r\n              <Input\r\n                type=\"checkbox\"\r\n                onClick={setCritical}\r\n                checked={this.state.critical}\r\n              />\r\n              Critical\r\n            </Label>\r\n          </FormGroup>\r\n        </Form>\r\n      );\r\n    };\r\n\r\n    var dieType = () => {\r\n      return this.state.die === 20 ? attackDie() : criticalDie();\r\n    };\r\n\r\n    var enableN = () => {\r\n      return (\r\n        <Label>\r\n          <Input\r\n            type=\"number\"\r\n            onChange={e => this.setN(+e.target.value)}\r\n            placeholder={this.state.n}\r\n          />\r\n          {\" d \"}\r\n        </Label>\r\n      );\r\n    };\r\n\r\n    var disableN = () => {\r\n      if(this.state.advantage && this.state.disadvantage){\r\n        return (\r\n          <Label>\r\n            <Input type=\"number\" value={1} className={\"width-sm\"} readOnly />\r\n            {\" d \"}\r\n          </Label>\r\n        );\r\n      }\r\n      return (\r\n        <Label>\r\n          <Input type=\"number\" value={2} className={\"width-sm\"} readOnly />\r\n          {\" d \"}\r\n        </Label>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Toast fade={false}>\r\n        <ToastHeader toggle={this.props.removable ? this.hide : null}>\r\n          {dieType()}\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          <Form inline>\r\n            <FormGroup inline>\r\n              {this.state.advantage || this.state.disadvantage\r\n                ? disableN()\r\n                : enableN()}\r\n              <Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  onChange={e => this.setDie(+e.target.value)}\r\n                  placeholder={this.state.die}\r\n                  defaultValue={20}\r\n                >\r\n                  <option>4</option>\r\n                  <option>6</option>\r\n                  <option>8</option>\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                </Input>\r\n                {\" + \"}\r\n              </Label>\r\n              <Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  onChange={e => this.setMod(+e.target.value)}\r\n                  placeholder={this.state.mod}\r\n                />\r\n                {\" = \"}\r\n                <Input type=\"text\" value={this.props.res} readOnly />\r\n              </Label>\r\n            </FormGroup>\r\n          </Form>\r\n        </ToastBody>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n","var randomAPI = require(\"random-org\");\r\n\r\nexport const generateIntegers = (func, params) => {\r\n  var generator = new randomAPI({\r\n    apiKey: \"61804754-7dfe-4259-9e1b-7dc2ca110a00\"\r\n  });\r\n  generator\r\n    .generateIntegers(params)\r\n    .then(result => {\r\n      func(result.random.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Dice from \"./../Dice\";\r\nimport \"./styles.css\";\r\nimport { generateIntegers } from \"./../utils/randomNumberGenerator\";\r\n\r\nexport default class DiceRoller extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addDie = this.addDie.bind(this);\r\n    this.removeDie = this.removeDie.bind(this);\r\n\r\n    this.roll = this.roll.bind(this);\r\n    this.rollDice = this.rollDice.bind(this);\r\n    this.summedValues = this.summedValues.bind(this);\r\n    this.rollD20 = this.rollD20.bind(this);\r\n    this.rollAdvantage = this.rollAdvantage.bind(this);\r\n    this.rollDisadvantage = this.rollDisadvantage.bind(this);\r\n\r\n    this.defaultDie = {\r\n      n: 1,\r\n      die: 20,\r\n      mod: 0,\r\n      res: 0,\r\n      advantage: false,\r\n      disadvantage: false\r\n    };\r\n\r\n    this.state = {\r\n      rolls: [this.defaultDie]\r\n    };\r\n  }\r\n\r\n  roll(func, params, rolls, i) {\r\n    generateIntegers(\r\n      func.bind(null, rolls, i), //curry: https://javascript.info/currying-partials\r\n      params\r\n    );\r\n  }\r\n\r\n  rollDice(rolls) {\r\n    rolls.forEach((die, i) => {\r\n      var func, rngParams;\r\n\r\n      if (die.die === 20) {\r\n        if (die.advantage && !die.disadvantage) {\r\n          rngParams = { n: 2, min: 1, max: 20, replacement: true };\r\n          func = this.rollAdvantage;\r\n        } else if (die.disadvantage && !die.advantage) {\r\n          rngParams = { n: 2, min: 1, max: 20, replacement: true };\r\n          func = this.rollDisadvantage;\r\n        } else {\r\n          rngParams = { n: die.n, min: 1, max: 20, replacement: true };\r\n          func = this.rollD20;\r\n        }\r\n      } else if (die.critical) {\r\n        rngParams = { n: die.n * 2, min: 1, max: die.die, replacement: true };\r\n        func = this.summedValues;\r\n      } else {\r\n        rngParams = { n: die.n, min: 1, max: die.die, replacement: true };\r\n        func = this.summedValues;\r\n      }\r\n\r\n      this.roll(func, rngParams, rolls, i);\r\n    });\r\n  }\r\n\r\n  summedValues(rolls, i, values) {\r\n    var sum = values.reduce((result, val) => {\r\n      return result + val;\r\n    });\r\n    rolls[i].res = sum + rolls[i].mod;\r\n    this.setState({ rolls }); //Must updates state here. Info will be lost otherwise.\r\n  }\r\n\r\n  rollD20(rolls, i, values) {\r\n    var roll = rolls[i];\r\n    var res;\r\n\r\n    if (values.length === 1) {\r\n      var criticalIcon =\r\n        values[0] === 20 ? \" \\u2618\" : values[0] === 1 ? \" \\u2620\" : \"\";\r\n      res = values[0] + roll.mod + criticalIcon;\r\n    } else {\r\n      res = \" (\";\r\n      values.forEach(val => {\r\n        res += val + roll.mod + \", \";\r\n      });\r\n      res = res.slice(0, -2);\r\n      res += \")\";\r\n    }\r\n\r\n    roll.res = res;\r\n    this.setState({ rolls }); //Must update state or else data is lost, generateIntegers is async\r\n  }\r\n\r\n  rollAdvantage(rolls, i, values) {\r\n    var roll = rolls[i];\r\n    var res = values[0] >= values[1] ? values[0] : values[1];\r\n    roll.res = res + roll.mod + \" (\" + values[0] + \", \" + values[1] + \")\";\r\n    this.setState({ rolls }); //Must update state or else data is lost, generateIntegers is async\r\n  }\r\n\r\n  rollDisadvantage(rolls, i, values) {\r\n    var roll = rolls[i];\r\n    var res = values[0] <= values[1] ? values[0] : values[1];\r\n    roll.res = res + roll.mod + \" (\" + values[0] + \", \" + values[1] + \")\";\r\n    this.setState({ rolls }); //Must update state or else data is lost, generateIntegers is async\r\n  }\r\n\r\n  addDie() {\r\n    var rolls = this.state.rolls;\r\n    rolls.push(\r\n      JSON.parse(JSON.stringify(this.defaultDie)) //Deep copy\r\n    );\r\n    this.setState({ rolls });\r\n  }\r\n\r\n  removeDie(die) {\r\n    var rolls = this.state.rolls;\r\n    rolls.splice(die.nth, 1);\r\n    this.setState({ rolls });\r\n  }\r\n\r\n  render() {\r\n    var rolls = this.state.rolls;//seperate from state to decrease re-render\r\n\r\n    var diceCallback = (die, update) => {\r\n      if (die.hidden) {\r\n        rolls.splice(die.nth, 1);\r\n        this.setState(rolls);\r\n      } else if (update) {\r\n        //Re-render all children\r\n        rolls[die.nth] = die;\r\n        this.setState({ rolls });\r\n      } else {\r\n        //No need to re-render all chilren\r\n        rolls[die.nth] = die;\r\n      }\r\n    };\r\n\r\n    var buildChildren = () => {\r\n      if (rolls.length > 1) {\r\n        var dice = [];\r\n        rolls.forEach((roll, key) => {\r\n          //console.log(roll);\r\n          dice.push(\r\n            <Dice\r\n              nth={key}\r\n              n={roll.n}\r\n              die={roll.die}\r\n              mod={roll.mod}\r\n              res={roll.res.toString(10)}\r\n              advantage={roll.advantage}\r\n              disadvantage={roll.disadvantage}\r\n              critical={roll.critical}\r\n              callback={diceCallback}\r\n              key={key}\r\n              removable={true}\r\n            />\r\n          );\r\n        });\r\n        return dice;\r\n      } else {\r\n        var roll = rolls[0];\r\n        //console.log(roll);\r\n        return (\r\n          <Dice\r\n            nth={0}\r\n            n={roll.n}\r\n            die={roll.die}\r\n            mod={roll.mod}\r\n            res={roll.res.toString(10)}\r\n            advantage={roll.advantage}\r\n            disadvantage={roll.disadvantage}\r\n            critical={roll.critical}\r\n            callback={diceCallback}\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Button onClick={this.addDie} block={true}>\r\n                + Add Die\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col style={{ padding: \"0\" }}>{buildChildren()}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                onClick={() => {\r\n                  this.rollDice(rolls);\r\n                }}\r\n                block={true}\r\n              >\r\n                Roll\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n} from 'reactstrap'\r\nimport './styles.css'\r\n\r\nexport default class InitTracker extends React.Component {\r\n  static propTypes = {\r\n    players: PropTypes.array,\r\n}\r\n\r\n  render(){\r\n    var arr = [];\r\n\r\n    this.props.players.forEach((player)=>{\r\n      arr.push(\r\n        <tr>\r\n          <td>{player.name}</td>\r\n          <td>{player.init}</td>\r\n        </tr>\r\n      )\r\n    })\r\n    return(\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Initiative</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arr}\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  Toast,\r\n  ToastHeader,\r\n  ToastBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Container\r\n} from 'reactstrap'\r\nimport './styles.css'\r\n\r\nexport default class HealthTracker extends React.Component {\r\n  static propTypes = {\r\n    character: PropTypes.string,\r\n    ac: PropTypes.number,\r\n    max: PropTypes.number\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: this.props.max,\r\n      temp: 0,\r\n      damage: 0\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var temp = this.props.temp;\r\n    var damage = this.props.damage;\r\n    var max = this.props.max;\r\n\r\n    var setTempHealth = (e) => {\r\n      if(+e.target.value <= 0){\r\n        this.setState({\r\n          current: this.props.max - this.state.damage,\r\n          temp: 0\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          current: +this.props.max + (+e.target.value) - this.state.damage,\r\n          temp: +e.target.value\r\n        })\r\n      }\r\n    }\r\n\r\n    var setDamage = (e) => {\r\n      updateDamage(+e.target.value)\r\n    }\r\n\r\n    var updateDamage = (damage) => {\r\n      this.setState({\r\n        current: +this.props.max + this.state.temp - (damage),\r\n        damage: damage\r\n      })\r\n    }\r\n\r\n    this.props.socket.on(\"receiveDamage\", damage => updateDamage(this.state.damage + damage));\r\n\r\n\r\n    return(\r\n      <Toast fade={false}>\r\n        <ToastHeader>\r\n          <Container>\r\n            <Row>\r\n              <h1>{this.props.character}</h1>\r\n            </Row>\r\n            <Row>\r\n             {\"AC: \"}{this.props.ac}\r\n            </Row>\r\n          </Container>\r\n        </ToastHeader>\r\n        <ToastBody>\r\n          <Table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Max HP</td>\r\n                <td>{this.props.max}</td>\r\n              </tr><tr>\r\n                <td>Current HP</td>\r\n                <td>{this.state.current}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Temp HP</td>\r\n                <td><Input\r\n                  onChange={setTempHealth} //@todo validate for negative #s\r\n                  type=\"number\"\r\n                  placeholder={this.state.temp}\r\n                  value={temp}\r\n                  className={\"width-sm\"} /></td>\r\n              </tr>\r\n              <tr>\r\n                <td>Damage</td>\r\n                <td><Input\r\n                onChange={setDamage} //@todo validate for negative #s\r\n                type=\"number\"\r\n                placeholder={this.state.damage}\r\n                value={damage}\r\n                className={\"width-sm\"} /></td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </ToastBody>\r\n      </Toast>\r\n    )\r\n  }\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport {\r\n  Button,\r\n  Form, FormGroup,\r\n  Label, Input,\r\n  Row, Col,\r\n} from 'reactstrap'\r\n\r\nimport { generateIntegers } from \"./../utils/randomNumberGenerator\";\r\n\r\nexport default class AttackRoller extends React.Component {\r\n\r\n  render () {\r\n    var advantage = false;\r\n    var disadvantage = false;\r\n    var n = 1;\r\n    var die = 20;\r\n    var modifier = 0;\r\n\r\n    var callback = () => {\r\n      console.log(\"AttackRoller => n: %s, die: %s, mod: %s\", n, die, modifier)\r\n      generateIntegers(\r\n        (vals) => {\r\n          this.props.callback(vals[0] + +modifier)\r\n        },\r\n        { n: n, min: 1, max: die, replacement: true }\r\n      )\r\n    }\r\n\r\n    var displayModifiers = () => {\r\n      return (\r\n        <Form>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input\r\n                type=\"checkbox\"\r\n                onChange={() => advantage = !advantage}\r\n                checked={advantage}\r\n              />{\" \"}\r\n              Advantage{\" \"}\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input\r\n                type=\"checkbox\"\r\n                onChange={() => disadvantage = !disadvantage}\r\n                checked={disadvantage}\r\n              />{\" \"}\r\n              Disadvantage{\" \"}\r\n            </Label>\r\n          </FormGroup>\r\n        </Form>\r\n      );\r\n    };\r\n\r\n    var displayAttackRoll = () => {\r\n      n = 1;\r\n      die = 20;\r\n      return (\r\n        <Form inline>\r\n          <Button onClick={callback} style = {{marginRight: '1em'}}>\r\n            Attack\r\n          </Button>\r\n          {' + '}\r\n          <Input\r\n            type=\"number\"\r\n            onChange={value => modifier = +value}\r\n            placeholder={modifier}\r\n          />\r\n        </Form>\r\n      )\r\n    }\r\n\r\n    var displayHealRoll = () => {\r\n      n = 1;\r\n      die = 4;\r\n      return (\r\n        <Form inline>\r\n          <Button onClick={callback} style = {{marginRight: '1em'}}>\r\n            Heal\r\n          </Button>\r\n          <Label>\r\n            <Input\r\n              type=\"number\"\r\n              onChange={e => n = +e.target.value}\r\n              className={\"width-sm\"}\r\n            placeholder={1}/>\r\n            {\" d \"}\r\n          </Label>\r\n          <Label>\r\n            <Input\r\n              type=\"select\"\r\n              onChange={e => die = +e.target.value}\r\n              placeholder={die}\r\n            >\r\n              <option>4</option>\r\n              <option>6</option>\r\n              <option>8</option>\r\n              <option>10</option>\r\n            </Input>\r\n            {\" + \"}\r\n          </Label>\r\n          <Input\r\n            type=\"number\"\r\n            onChange={e => modifier = e.target.value}\r\n            placeholder={modifier}\r\n          />\r\n        </Form>\r\n      )\r\n    }\r\n\r\n    if(this.props.action.toLowerCase() === 'attack'){\r\n      return (\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs='4'>\r\n              {displayModifiers()}\r\n            </Col>\r\n\r\n            <Col xs='8'>\r\n              {displayAttackRoll()}\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )\r\n    }\r\n    else if (this.props.action.toLowerCase() === 'heal'){\r\n      return (\r\n        <Fragment>\r\n          <Row>\r\n            <Col xs='12'>\r\n              {displayHealRoll()}\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )\r\n    }\r\n    else{\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Label, Input,\r\n  Col, Row,\r\n} from 'reactstrap'\r\nimport AttackRoller from './../AttackRoller'\r\nimport HealthTracker from './../HealthTracker'\r\n\r\nexport default class Entity extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.socket = this.props.socket\r\n\r\n    this.socket.on('actionFromServer', (data) => {\r\n      var log = 'Log: ' + data.from + ' '+ data.action + 'ed ' + data.to + ' for ' + data.roll\r\n      this.setState({log})\r\n    })\r\n\r\n    this.state = {\r\n      target: '',\r\n      action: 'Attack',\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    var log = '';\r\n    var rollerCallback = (roll) => {\r\n      if(this.state.target.length > 0){\r\n        this.socket.emit('actionFromPlayer',\r\n          {\r\n            id: this.socket.id,\r\n            name: this.props.name,\r\n            target: this.state.target,\r\n            action: this.state.action,\r\n            roll: roll,\r\n          }\r\n        )\r\n        log = \"Log: \" + this.props.name + ' ' + this.state.action + 'ed ' + this.state.target + ' for ' + roll\r\n      }\r\n      else {\r\n        log = \"Alert: Select a valid target\"\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          {log}\r\n        </CardHeader>\r\n        <Row>\r\n          <Col xs=\"3\">\r\n            <HealthTracker character={this.props.name} ac={this.props.ac} max={this.props.maxHP} socket={this.socket}/>\r\n          </Col>\r\n          <Col xs=\"9\">\r\n            <Row>\r\n              <Col>\r\n                Action\r\n                <Label>\r\n                  <Input\r\n                    onChange={(option) => {this.setState({action: option.target.value})}}\r\n                    type=\"select\"\r\n                    placeholder={\"Attack\"}\r\n                  >\r\n                    <option>Attack</option>\r\n                    <option>Heal</option>\r\n                  </Input>\r\n                </Label>\r\n              </Col>\r\n              <Col>\r\n                Target\r\n                <Label>\r\n                  <Input\r\n                    onChange={(option) => {this.setState({target: option.target.value})}}\r\n                    type=\"select\"\r\n                    placeholder={\"activeEntities\"}\r\n                  >\r\n                    <option>List of activeEntities</option>\r\n                    <option>test</option>\r\n                  </Input>\r\n                </Label>\r\n              </Col>\r\n            </Row>\r\n            <AttackRoller callback={rollerCallback} action={this.state.action}/>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Form, FormGroup, FormText,\r\n  Label, Input, Option,\r\n  Button,\r\n} from 'reactstrap'\r\n\r\nexport default class NewCharacterForm extends React.Component {\r\n  static propTypes = {\r\n    callback: PropTypes.func,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    var name, ac, maxHP, init;\r\n\r\n    var filledAllFields = () => {\r\n      if (name === undefined ||\r\n        ac === undefined ||\r\n        maxHP === undefined ||\r\n        init === undefined\r\n      )\r\n        return false\r\n\r\n      return true\r\n    }\r\n\r\n    var sendData = () => {\r\n      if (filledAllFields()){\r\n        this.props.callback(\r\n          {\r\n            name: name,\r\n            ac: ac,\r\n            maxHP: maxHP,\r\n            init: init\r\n          }\r\n        )\r\n      }\r\n      else {\r\n        this.props.callback(\"error\")\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"characterName\">Name:</Label>\r\n          <Input type=\"text\" name=\"name\" id=\"characterName\" placeholder=\"Name...\" onChange={e => name = e.target.value}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"characterAC\">Armor Class:</Label>\r\n          <Input type=\"number\" name=\"ac\" id=\"characterAC\" placeholder=\"15, 12, 20...\"onChange={e => ac = +e.target.value}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"characterMaxHP\">Maximum HP:</Label>\r\n          <Input type=\"number\" name=\"ac\" id=\"characterMaxHP\" placeholder=\"40, 20, 55...\" onChange={e => maxHP = +e.target.value}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"characterinit\">Initiative Modifier:</Label>\r\n          <Input type=\"number\" name=\"init\" id=\"characterinit\" placeholder=\"40, 20, 55...\" onChange={e => init = +e.target.value}/>\r\n        </FormGroup>\r\n        <Button onClick={sendData}>Submit</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./base-styles.scss\";\nimport App from \"./components/App\";\nReactDOM.render(<App/> , document.getElementById(\"root\"));\n//serviceWorker.register();\n"],"sourceRoot":""}